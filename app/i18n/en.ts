const en = {
  common: {
    ok: "OK!",
    cancel: "Cancel",
    back: "Back",
    delete: "Delete",
    loading: "Loading...",
    exercise: "Exercise",
    bestSet: "Best set",
    kg: "kg",
    lbs: "lbs",
    appTitle: "GYMRAPP",
    leaderboard: "Leaderboard",
    firstName: "First name",
    lastName: "Last name",
    search: {
      inputPlaceholder: "Search for something",
      moreCharactersRequiredMessage: "Enter at least 3 characters",
      isSearchingMessage: "Searching...",
      noResultsFoundMessage: "No results found",
      notWhatYouAreLookingForMessage: "Not what you are looking for?",
    },
    activities: "Activities",
    followers: "Followers",
    following: "Following",
    comments: "Comments",
    copiedToClipboard: "Copied to clipboard!",
    selected: "Selected",
    discard: "Discard",
    save: "Save",
    user: "User",
    workouts: "Workouts",
    error: {
      networkErrorMessage: "Internet connection is not available",
      unknownErrorMessage: "Something went wrong",
    },
    offlineMode: {
      firestoreNetworkDisabledMessage:
        "Data will be saved locally and synced when internet connection is available",
      firestoreNetworkEnabledMessage: "You are back online!",
      pendingWritesFailedMessage: "Failed to sync offline data with the server",
      pendingWritesSuccessMessage: "Offline data synced with the server",
      localWorkoutsSyncedMessage: "Your workouts have been synced with the server",
    },
  },
  notification: {
    restTime: {
      channelName: "Rest timer",
      restTimeCompletedTitle: "Rest time is up!",
      restTimeCompletedGenericPrompt: "Time to get back to work!",
      restTimeCompletedFromLastSetPrompt: "Last completed set: {{setDescription}}",
    },
    permissionAlert: {
      title: "Permission required",
      message: "Please enable notifications to receive updates about your workouts.",
      goToAppSettingsButtonLabel: "App settings",
    },
  },
  updateApp: {
    update: "Update",
    updateAvailableTitle: "Update available",
    updateAvailableMessage: "A new version of the app is available. Would you like to update now?",
    forceUpdateTitle: "Update required",
    forceUpdateMessage:
      "A new version of the app is available. Please update now to continue using the app.",
    checkForUpdateErrorMessage:
      "Failed to check for updates. Please make sure you are connected to the internet or restart the app.",
  },
  welcomeScreen: {
    welcomeTitle: "Welcome to GYMRAPP!",
    welcomeMessage:
      "This is the app for gym rats. Track and share your progress with the community and celebrate your accomplishments.",
    getStartedButtonLabel: "Get started",
  },
  errorScreen: {
    title: "This is awkward...",
    message: "Something went wrong with GYMRAPP. Please report it to us so we can fix it.",
    reset: "RESET APP",
  },
  emptyStateComponent: {
    generic: {
      heading: "So empty... so sad",
      content: "No data found yet. Try clicking the button to refresh or reload the app.",
      button: "Let's try this again",
    },
  },
  tabNavigator: {
    activityTab: "Activity",
    // startWorkout: "Start a workout",
    // manageExercises: "Manage exercises",
    feedTab: "Feed",
    discoverTab: "Discover",
    // upcomingTab: "Upcoming",
    exercisesTab: "Exercises",
    profileTab: "You",
  },
  signInScreen: {
    signIn: "Sign in",
    orSignInWith: "Or sign in with",
    emailFieldLabel: "Email",
    passwordFieldLabel: "Password",
    emailFieldPlaceholder: "Enter your email address",
    passwordFieldPlaceholder: "Enter your password",
    tapToSignIn: "Tap to sign in!",
    hint: "Hint: you can use any email address and your favorite password :)",
    signUpWithEmail: "Create account with email",
    signInWithGoogle: "Continue with Google",
    signInWithApple: "Continue with Apple",
    error: {
      invalidCredentials: "Invalid credentials",
      tooManyRequests: "Too many failed attempts, please try again later",
      loginCancelled: "Login cancelled",
    },
  },
  signUpScreen: {
    signUp: "Sign up",
    tapToCreateAccount: "Create new account",
    emailFieldLabel: "Email",
    passwordFieldLabel: "Password",
    passwordFieldHint:
      "Minimum 8 characters with at least one uppercase letter, one lowercase letter, one number",
    confirmPasswordFieldLabel: "Confirm password",
    firstNamePlaceholder: "Enter your first name",
    lastNamePlaceholder: "Enter your last name",
    emailFieldPlaceholder: "Enter your email address",
    passwordFieldPlaceholder: "Enter your password",
    confirmPasswordFieldPlaceholder: "Type your password again",
    error: {
      firstNameMissing: "First name is not provided",
      lastNameMissing: "Last name is not provided",
      emailMissing: "Email is not provided",
      emailAlreadyInUse: "Email is already in use",
      emailInvalid: "Email is invalid",
      passwordMissing: "Password is not set",
      passwordInsecure:
        "Password is too weak; please use a minimum 8 characters with at least one uppercase letter, one lowercase letter, one number",
      passwordMismatch: "Passwords do not match",
    },
  },
  emailVerificationScreen: {
    emailVerificationTitle: "Check your inbox!",
    emailVerificationMessage:
      "We have sent a verification email to {{email}}. Please use the link in the email to verify your account.",
  },
  emailVerifiedScreen: {
    emailVerifiedTitle: "Email verified!",
    emailVerifiedMessage: "Your email address has been verified.",
    continueButtonLabel: "Let's go!",
  },
  feedScreen: {
    notFollowingAnyone: "Start following people to see their workouts here",
    noFeedItems: "Once your friends start working out, you'll see their workouts here",
    noMoreFeedItems: "That's all we have for now!",
  },
  profileScreen: {
    userSettings: "Settings",
    activitiesTabLabel: "Activities",
    dashboardTabLabel: "Dashboard",
    dashboardWeeklyWorkoutsTitle: "Weekly workouts",
    noActivityhistory: "No activity history",
    coachsCenterButtonLabel: "Coach's Center",
  },
  editProfileForm: {
    editProfileTitle: "Your profile",
    aboutYouSectionLabel: "About you",
    userHandleLabel: "User handle",
    newUserHandleAvailableMessage: "This user handle is available",
    personaTypeLabel: "Are you a coach?",
    uploadAvatarLabel: "Set your avatar",
    uploadAvatarPlaceholder: "Choose a picture",
    myGymsLabel: "My gyms",
    myGymsDescription: "Add gyms you frequently visit to your profile",
    addGymButtonLabel: "Add gym",
    preferencesSectionLabel: "Preferences",
    privateAccountTitle: "Private account",
    privateAccountDescription: "Private account activity is only visible to friends.",
    weightUnitLabel: "Weight unit",
    appLocaleLabel: "App language",
    autoRestTimerLabel: "Auto rest timer",
    autoRestTimerDescription: "Automatically start rest timer after each set.",
    defaultRestTimeLabel: "Default rest time",
    defaultRestTimeSelectorLabel: "Select default rest time:",
    appAppearanceLabel: "App appearance",
    saveProfileChanges: "Save changes",
    discardAlertTitle: "Discard changes?",
    discardAlertMessage: "There are unsaved changes. Are you sure you want to discard them?",
    alertDialogResume: "Keep editing",
    error: {
      userHandleMissingMessage: "Please enter a user handle",
      userHandleIsTakenMessage: "This user handle is already taken",
      userHandleInvalidMessage:
        "User handle can only contain up to 30 characters of English letters, numbers, underscores and periods",
      firstNameMissingMessage: "Please enter your first name",
      lastNameMissingMessage: "Please enter your last name",
    },
    backButtonDisabledMessage:
      "Use the discard or save button at the top and bottom of the screen to exit",
  },
  addToMyGymsScreen: {
    addToMyGymsTitle: "My gyms",
  },
  userSettingsScreen: {
    accountControlsSectionLabel: "Account controls",
    logoutAlertTitle: "Logout",
    logoutAlertMessage: "Are you sure you want to logout?",
    deleteAccountAlertTitle: "Delete account",
    deleteAccountAlertMessage:
      "This will remove all user data. This action cannot be reversed. Are you sure?",
  },
  newActivityScreen: {
    startNewWorkoutText: "Start new workout",
    nextWorkoutHeading: "Next workout in program",
    savedWorkoutHeading: "Saved workouts",
    resumeWorkoutPromptMessage: "Resume or start new workout?",
    resumeWorkout: "Resume",
  },
  activeWorkoutScreen: {
    newActiveWorkoutTitle: "New workout",
    setCurrentGymLabel: "Set current gym",
    finishWorkoutButton: "Finish",
    setOrderColumnHeader: "Set",
    previousColumnHeader: "Prev",
    weightColumnHeader: "Weight",
    repsColumnHeader: "Reps",
    rpeColumnHeader: "RPE",
    timeColumnHeader: "Time",
    enterTimeLabel: "Enter time",
    addNotesPlaceholder: "Add notes...",
    addSetAction: "Add set",
    addExerciseAction: "Add exercise",
    noExercisesMessage: "No exercises added yet",
    dialogRemoveIncompletedSets: "Incompleted sets will be removed, are you sure?",
    noExercisesAddedMessage:
      "At least one exercise set must be completed for a workout, complete a set to continue or discard the workout.",
    confirmRemoveIncompletedSets: "Yes, remove incompleted sets",
    rejectRemoveIncompletedSets: "Go back",
    dialogSaveWorkout: "Do you want to save this workout?",
    saveWorkout: "Save",
    discardWorkout: "Discard",
    cancelAction: "Cancel",
    timeElapsedLabel: "Time elapsed:",
    totalVolumeLabel: "Total volume:",
    timeSinceLastSetLabel: "Resting (set):",
    rpeNullLabel: "None",
    ongoingWorkoutLabel: "Ongoing workout",
    gymPickerScreenTitle: "Select gym",
    emptyFavoriteGymsMessage:
      "You do not have any favorite gyms yet, favorite a gym to automatically set your workout location.",
    noFavoriteGymFoundMessage: "Seems like you are not near any of your favorite gyms!",
    favoriteGymFoundMessage: "Setting workout location to {{gymName}}",
  },
  saveWorkoutScreen: {
    workoutTitleLabel: "Workout title",
    workoutTitlePlaceholder: "New workout",
    resumeWorkoutButtonLabel: "Resume",
    discardWorkoutAlertTitle: "Discard workout",
    discardWorkoutAlertMessage: "Are you sure you want to discard this workout?",
    workoutSavedLocallyMessage:
      "Internet connection unavailable, workout is saved locally and will be synced when connection is available",
  },
  workoutSettings: {
    setWorkoutVisibilityLabel: "Set workout visibility",
    workoutHiddenLabel: "Only for you",
    workoutVisibleToFeedLabel: "Visible to feed",
    workoutSummaryLabel: "Workout summary",
  },
  workoutSummaryScreen: {
    headerTitle: "Workout summary",
    commentInputPlaceholder: "Leave a comment...",
    noCommentsMessage: "Start the conversation!",
    workoutUnavailableMessage: "This workout is unavailable",
    workoutSavedLocallyMessage: "This workout is not synced with the server",
    workoutEditedMessage: "This workout has been edited so personal records may not be accurate.",
  },
  workoutSummaryMenu: {
    editWorkoutButtonLabel: "Edit workout",
    // workoutTitleLabel: "Workout title",
    deleteWorkoutAlertTitle: "Delete workout",
    deleteWorkoutAlertMessage: "Are you sure you want to delete this workout?",
    deleteWorkoutSuccessMessage: "Workout deleted",
    deleteWorkoutFailedMessage: "Failed to delete workout",
  },
  workoutCommentsPanel: {
    deleteCommentConfirmationMessage: "Delete comment?",
  },
  restTimerScreen: {
    headerTitle: "Rest timer",
    startTimer: "Start",
    resetTimer: "Reset",
    minutes: "minutes",
    seconds: "seconds",
    subtract15Seconds: "-15 sec",
    add15Seconds: "+15 sec",
    timesUpMessage: "Time's up!",
  },
  exerciseManagerScreen: {
    exerciseManagerTitle: "Exercises",
  },
  exercisePickerScreen: {
    headerTitle: "Select exercise",
  },
  exerciseDetailsScreen: {
    headerTitle: "Exercise details",
    personalRecordsLabel: "Personal Records",
    workoutHistoryLabel: "Workout History",
    recordsHeaderDateLabel: "Date Performed",
    recordsHeaderWeightLabel: "Weight",
    recordsHeaderRepsLabel: "Reps",
    recordsHeaderTimeLabel: "Time",
    noExerciseHistoryFound: "No exercise history found.",
  },
  createExerciseScreen: {
    createExerciseTitle: "Create an exercise",
    disclaimer:
      "Exercises you create are only available in your workouts and will not be shared with other users.",
    activityType: "Activity Type",
    exerciseCat1: "Category",
    exerciseCat2: "Sub-Category (optional)",
    volumeType: "Volume Type",
    setAsBlankLabel: "Set as blank",
    requiredFieldsMissingMessage: "Please fill out all required fields",
    exerciseName: "Exercise name",
    addExerciseButton: "Add exercise",
  },
  exerciseEntrySettings: {
    restTimerEnabledLabel: "Enabled",
    restTimeLabel: "Rest time",
    createSupersetLabel: "Create superset",
    removeExerciseLabel: "Remove exercise",
    weightUnitLabel: "Weight unit",
  },
  createNewGymScreen: {
    createNewGymTitle: "Create a new gym",
    gymNameLabel: "Gym name",
    gymNamePlaceholder: "Enter gym name",
    gymLocationLabel: "Gym address",
    gymLocationPlaceholder: "Enter a gym name and select from the list",
    createNewGymButtonLabel: "Create gym",
    checkingGymExistsLabel: "Checking if gym exists...",
    gymsNearYouLabel: "Gyms near you",
    noGymsFoundLabel: "No gyms found around your area",
  },
  userLocation: {
    gettingUserLocationLabel: "Getting current location...",
    locationPermissionRequiredTitle: "Location permission is required",
    locationPermissionRequiredMessage:
      "Location permission is required to verify gym location. Please enable location permission in your device settings if you wish to use this feature.",
    goToAppSettingsButtonLabel: "App settings",
    unableToAcquireLocationMessage: "Unable to acquire current location",
  },
  gymPickerScreen: {
    selectFromMyGymsLabel: "Your favorite gyms",
    emptyMyGymsLabel: "You have no favorite gyms",
    searchForGymLabel: "Search for gyms",
    gettingUserLocationLabel: "Getting current location...",
    locationTooFarMessage:
      "Your location seems too far from this gym, is this the right gym? You must be within 500 meters of the gym to check in.",
  },
  gymSearch: {
    searchBarPlaceholder: "Search for a gym",
    createNewGymButtonLabel: "Create a new gym",
    searchPromptMessage: "Check out your favorite gyms!",
  },
  gymDetailsScreen: {
    headerTitle: "Gym details",
    addToMyGymsLabel: "Add to my gyms",
    removeFromMyGymsLabel: "Remove from my gyms",
    alreadyAddedToMyGymsLabel: "Already added to my gyms",
    alreadyRemovedFromMyGymsLabel: "Already removed from my gyms",
    latestWorkoutsLabel: "Latest workouts",
    gymMembersLabel: "Members",
    noMoreWorkoutsMessage: "That's all we have for now!",
    noMoreMembersMessage: "That's all the members at this gym!",
    noActivityMessage: "Be the first to workout here!",
  },
  userSearch: {
    searchBarPlaceholder: "Search for a user",
    inviteFriendsButtonLabel: "Invite your friends to GYMRAPP",
    searchPromptMessage: "Find your friends on GYMRAPP now!",
  },
  discoverScreen: {
    discoverTitle: "Discover",
    allCategoriesLabel: "All",
    usersCategoryLabel: "Users",
    gymsCategoryLabel: "Gyms",
  },
  profileVisitorViewScreen: {
    dateJoinedLabel: "Date joined",
    followButtonLabel: "Follow",
    followBackButtonLabeL: "Follow back",
    unfollowButtonLabel: "Unfollow",
    followRequestSentMessage: "Follow request sent",
    followRequestAcceptedMessage: "You have rejected this user's follow request",
    followRequestRejectedMessage: "You have rejected this user's follow request",
    noActivityHistoryMessage: "No activity history",
    userIsPrivateMessage: "This user is private",
  },
  notificationsScreen: {
    notificationsTitle: "Notifications",
    noNotificationsMessage: "No notifications",
    newNotificationsTitle: "New",
    olderNotificationsTitle: "Older",
    followRequestsTitle: "Follow requests",
    commentNotificationMessage: "commented on your workout",
    likeNotificationMessage: "liked your workout",
    followRequestNotificationMessage: "requested to follow you",
    followAcceptedNotificationMessage: "accepted your follow request",
    markAllAsReadButtonLabel: "Mark all as read",
  },
}

export default en
export type Translations = typeof en
